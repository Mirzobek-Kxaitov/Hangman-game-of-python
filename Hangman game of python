# Hangman in Python
import random
#from idlelib.window import add_windows_to_menu
#The random module is used to make random choices, such as selecting a random word for the game.

words = ("apple","orange","banana","coconut","pineapple")
#words which are uses in our game
#This tuple (immutable list) contains the words used in the Hangman game. During the game,
# a random word is selected from this list.

#dictionary of key:()
hangman_art = {0: ("   ",
                   "   ",
                   "   ",),
               1: (" o ",
                  "    ",
                  "    ",),
               2: (" o  ",
                  " | ",
                  "   ",),
               3: (" o  ",
                  "/|  ",
                  "   " ),
               4: (" o  ",
                   "/|\\ ",
                   "   " ),
               5: ("  o  ",
                  " /|\\ ",
                  " /  " ),
               6: (" o ",
                   "/|\\",
                   "/ \\" )}
# This dictionary stores the visual representation of the Hangman at different stages based on incorrect guesses.
# when you say incorrect answer the man will be hang
#Keys (0â€“6) represent the number of wrong guesses, and the values contain the visual lines of the Hangman figure.

def display_man(wrong_guesses):
#This function displays the current Hangman figure based on the number of wrong guesses.

    print("************")
    for line in hangman_art[wrong_guesses]:
        print(line)
    print("************")
def display_hint(hint):
## Display the player's current progress
    print(" ".join(hint))

def display_answer(answer):
    # Show the full answer after the game ends
    print(" ".join(answer))


def main():
    # Main function controlling the game
    answer = random.choice(words)
    # Randomly select a word
    hint = ["_"] * len(answer)
    # Initialize the hint with underscores
    wrong_guesses = 0
    # Initialize wrong guesses count
    guessed_letters = set()
    # Store guessed letters to avoid duplicates
    is_running = True
    # Flag to check if the game is still running

    while is_running:
        display_man(wrong_guesses)
        display_hint(hint)
        guess = input("Enter a letter: ").lower()

        if len(guess) != 1 or not guess.isalpha():
            print("Invalid input")
            continue


        if guess in guessed_letters:
            print(f"{guess} was already guessed")
            continue

        guessed_letters.add(guess)

        if guess in answer:
             for i in range(len(answer)):
                if answer [i] == guess:
                    hint[i] = guess
        else:
            wrong_guesses += 1

        if "_" not in hint:
            display_man(wrong_guesses)
            display_answer(answer)
            print("YOU WON!")
            is_running = False
        elif wrong_guesses >= len(hangman_art)  -1:
            display_man(wrong_guesses)
            display_answer(answer)
            print("YOU LOSE!")
            is_running = False



if __name__ == '__main__':
    main()
